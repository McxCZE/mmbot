[service]

# specifies an instance file
# the instance file is file created when service starts and it
# is used to communicate with the command-line interface.
# 
# this file also used to detect, whether the bot is running, to
# support start/stop/restart and other features. You can run multiple
# instances where the each instance has different inst_file.
#
# if you delete instance file while the bot is running, you will 
# unable to control the service. You need to kill it manually
# using killall (or pidof mmbot and kill)
#

inst_file=../run/inst.pid

# Allows to change effective user. This is useful, when the bot
# is started under root account. However it is not recommended at all.
# it is better to start the bot directly through the "su".

# user=mmbot

# socket file used to communicate with webserver

socket=../run/mmbot.socket:666

# enable listening on specified port. It is disabled by default to enable multiple instalations
#
#listen=localhost:11223
#

## specify count of threads allocated for the http server. Default value is enough for standard instalation on small VPS.
## however this can be increased especially for extensive use of the REST api for backtesting etc.
## note increasing count of threads doesn't speed up the main trading cycle.
#
#http_threads=2

# path to the directory, where traders data are stored

storage_path=../data

# data are stored in binary format. You can disable binary format
# then data are stored as json. This makes large files, but readable
# for humans. Use this if you need to edit the data files.
#
# Note that you can edit data files only if the bot is stopped
 
# storage_binary=no

# specifies timeout in milliseconds for response from every broker. If the broker doesn't respond in time, it
# is interrupted and restarted. Use value -1 to disable timeout (for debugging purposes)

# broker_timeout=10000
#
# broker_timeout=-1	

# specifies maximum body size in bytes fo any PUT, POST and upload, default is 10MB

# upload_limit=10000000



[login]

## specify admin login:password in base64 to log into webadmin in case that you lost access
#
#admin=YWRtaW46c2VjcmV0
#
## allow access using JWT token. The token must be put into Authorization as Bearer or into cookie auth= (same format)
## Supported types are ES256, ES384, ES512, RS256, RS384, RS512.
## Note - users authorized through JWT are considered as administrators
#
#jwt_type=ES256
#
## Specifies public key file for jwt token, must be in PEM format
#
#jwt_public=public_key.pem
#
#

[log]

# specify path and name for the log file

file=../log/logfile

# defines level of logging
# available levels are (from the most verbose to less)
# - debug - log everything
# - info - important informations, such subresults of calculations etc.
# - progress - used to log progress of various operations
# - note - important messages, that should not be harmfull
# - warning - important message, that may be harmfull or recoverable errors
# - error - errors mostly unrecoverable
# - fatal - fatal errors and crashes

level=fatal


[report]

# specify path where the report is stored

path=../www

# specify defaul interval of reported data (configured from webadmin)

interval=864000000

[backtest]

## specifies size of backtest cache (in items). Default value is 8. 
## This allows to store data minute data or trades to run backtest, without need to reupload data
## for each attempt. The value specifies maximum number of data files stored on server. Once this
## value is reached, some old files are deleted, so data must be reuploaded later to run backtest again
## minimal value is 8
## note - cache can be temporary larger, because items are locked for 30sec after upload or use.
#
# backtest_cache_size=8
#
## by default, cached items are stored in temporary folder. By enabling this option, the items will
## be stored in memory. This can increase total memory allocation
#
# in_memory=true
 
[news]
## you can display platform news in robot's admin page
## the placeholder ${tm} is filled with a timestamp of last seen message

# url=https://www.mmbot.trade/main.api/news?tm=${tm}



@include brokers.conf

